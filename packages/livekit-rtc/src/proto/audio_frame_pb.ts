// Copyright 2023 LiveKit, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.2.0 with parameter "target=ts,import_extension=js"
// @generated from file audio_frame.proto (package livekit.proto, syntax proto2)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { FfiOwnedHandle } from "./handle_pb.js";
import { file_handle } from "./handle_pb.js";
import type { TrackSource } from "./track_pb.js";
import { file_track } from "./track_pb.js";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file audio_frame.proto.
 */
export const file_audio_frame: GenFile = /*@__PURE__*/
  fileDesc("ChFhdWRpb19mcmFtZS5wcm90bxINbGl2ZWtpdC5wcm90byKGAQoVTmV3QXVkaW9TdHJlYW1SZXF1ZXN0EhQKDHRyYWNrX2hhbmRsZRgBIAIoBBIsCgR0eXBlGAIgAigOMh4ubGl2ZWtpdC5wcm90by5BdWRpb1N0cmVhbVR5cGUSEwoLc2FtcGxlX3JhdGUYAyABKA0SFAoMbnVtX2NoYW5uZWxzGAQgASgNIkkKFk5ld0F1ZGlvU3RyZWFtUmVzcG9uc2USLwoGc3RyZWFtGAEgAigLMh8ubGl2ZWtpdC5wcm90by5Pd25lZEF1ZGlvU3RyZWFtIsoBCiFBdWRpb1N0cmVhbUZyb21QYXJ0aWNpcGFudFJlcXVlc3QSGgoScGFydGljaXBhbnRfaGFuZGxlGAEgAigEEiwKBHR5cGUYAiACKA4yHi5saXZla2l0LnByb3RvLkF1ZGlvU3RyZWFtVHlwZRIwCgx0cmFja19zb3VyY2UYAyABKA4yGi5saXZla2l0LnByb3RvLlRyYWNrU291cmNlEhMKC3NhbXBsZV9yYXRlGAUgASgNEhQKDG51bV9jaGFubmVscxgGIAEoDSJVCiJBdWRpb1N0cmVhbUZyb21QYXJ0aWNpcGFudFJlc3BvbnNlEi8KBnN0cmVhbRgBIAIoCzIfLmxpdmVraXQucHJvdG8uT3duZWRBdWRpb1N0cmVhbSK7AQoVTmV3QXVkaW9Tb3VyY2VSZXF1ZXN0EiwKBHR5cGUYASACKA4yHi5saXZla2l0LnByb3RvLkF1ZGlvU291cmNlVHlwZRIyCgdvcHRpb25zGAIgASgLMiEubGl2ZWtpdC5wcm90by5BdWRpb1NvdXJjZU9wdGlvbnMSEwoLc2FtcGxlX3JhdGUYAyACKA0SFAoMbnVtX2NoYW5uZWxzGAQgAigNEhUKDXF1ZXVlX3NpemVfbXMYBSABKA0iSQoWTmV3QXVkaW9Tb3VyY2VSZXNwb25zZRIvCgZzb3VyY2UYASACKAsyHy5saXZla2l0LnByb3RvLk93bmVkQXVkaW9Tb3VyY2UiZgoYQ2FwdHVyZUF1ZGlvRnJhbWVSZXF1ZXN0EhUKDXNvdXJjZV9oYW5kbGUYASACKAQSMwoGYnVmZmVyGAIgAigLMiMubGl2ZWtpdC5wcm90by5BdWRpb0ZyYW1lQnVmZmVySW5mbyItChlDYXB0dXJlQXVkaW9GcmFtZVJlc3BvbnNlEhAKCGFzeW5jX2lkGAEgAigEIjwKGUNhcHR1cmVBdWRpb0ZyYW1lQ2FsbGJhY2sSEAoIYXN5bmNfaWQYASACKAQSDQoFZXJyb3IYAiABKAkiMAoXQ2xlYXJBdWRpb0J1ZmZlclJlcXVlc3QSFQoNc291cmNlX2hhbmRsZRgBIAIoBCIaChhDbGVhckF1ZGlvQnVmZmVyUmVzcG9uc2UiGgoYTmV3QXVkaW9SZXNhbXBsZXJSZXF1ZXN0IlIKGU5ld0F1ZGlvUmVzYW1wbGVyUmVzcG9uc2USNQoJcmVzYW1wbGVyGAEgAigLMiIubGl2ZWtpdC5wcm90by5Pd25lZEF1ZGlvUmVzYW1wbGVyIpMBChdSZW1peEFuZFJlc2FtcGxlUmVxdWVzdBIYChByZXNhbXBsZXJfaGFuZGxlGAEgAigEEjMKBmJ1ZmZlchgCIAIoCzIjLmxpdmVraXQucHJvdG8uQXVkaW9GcmFtZUJ1ZmZlckluZm8SFAoMbnVtX2NoYW5uZWxzGAMgAigNEhMKC3NhbXBsZV9yYXRlGAQgAigNIlAKGFJlbWl4QW5kUmVzYW1wbGVSZXNwb25zZRI0CgZidWZmZXIYASACKAsyJC5saXZla2l0LnByb3RvLk93bmVkQXVkaW9GcmFtZUJ1ZmZlciKcAgoWTmV3U294UmVzYW1wbGVyUmVxdWVzdBISCgppbnB1dF9yYXRlGAEgAigBEhMKC291dHB1dF9yYXRlGAIgAigBEhQKDG51bV9jaGFubmVscxgDIAIoDRI8Cg9pbnB1dF9kYXRhX3R5cGUYBCACKA4yIy5saXZla2l0LnByb3RvLlNveFJlc2FtcGxlckRhdGFUeXBlEj0KEG91dHB1dF9kYXRhX3R5cGUYBSACKA4yIy5saXZla2l0LnByb3RvLlNveFJlc2FtcGxlckRhdGFUeXBlEjcKDnF1YWxpdHlfcmVjaXBlGAYgAigOMh8ubGl2ZWtpdC5wcm90by5Tb3hRdWFsaXR5UmVjaXBlEg0KBWZsYWdzGAcgASgNImwKF05ld1NveFJlc2FtcGxlclJlc3BvbnNlEjUKCXJlc2FtcGxlchgBIAEoCzIgLmxpdmVraXQucHJvdG8uT3duZWRTb3hSZXNhbXBsZXJIABIPCgVlcnJvchgCIAEoCUgAQgkKB21lc3NhZ2UiUwoXUHVzaFNveFJlc2FtcGxlclJlcXVlc3QSGAoQcmVzYW1wbGVyX2hhbmRsZRgBIAIoBBIQCghkYXRhX3B0chgCIAIoBBIMCgRzaXplGAMgAigNIksKGFB1c2hTb3hSZXNhbXBsZXJSZXNwb25zZRISCgpvdXRwdXRfcHRyGAEgAigEEgwKBHNpemUYAiACKA0SDQoFZXJyb3IYAyABKAkiNAoYRmx1c2hTb3hSZXNhbXBsZXJSZXF1ZXN0EhgKEHJlc2FtcGxlcl9oYW5kbGUYASACKAQiTAoZRmx1c2hTb3hSZXNhbXBsZXJSZXNwb25zZRISCgpvdXRwdXRfcHRyGAEgAigEEgwKBHNpemUYAiACKA0SDQoFZXJyb3IYAyABKAkicAoUQXVkaW9GcmFtZUJ1ZmZlckluZm8SEAoIZGF0YV9wdHIYASACKAQSFAoMbnVtX2NoYW5uZWxzGAIgAigNEhMKC3NhbXBsZV9yYXRlGAMgAigNEhsKE3NhbXBsZXNfcGVyX2NoYW5uZWwYBCACKA0ieQoVT3duZWRBdWRpb0ZyYW1lQnVmZmVyEi0KBmhhbmRsZRgBIAIoCzIdLmxpdmVraXQucHJvdG8uRmZpT3duZWRIYW5kbGUSMQoEaW5mbxgCIAIoCzIjLmxpdmVraXQucHJvdG8uQXVkaW9GcmFtZUJ1ZmZlckluZm8iPwoPQXVkaW9TdHJlYW1JbmZvEiwKBHR5cGUYASACKA4yHi5saXZla2l0LnByb3RvLkF1ZGlvU3RyZWFtVHlwZSJvChBPd25lZEF1ZGlvU3RyZWFtEi0KBmhhbmRsZRgBIAIoCzIdLmxpdmVraXQucHJvdG8uRmZpT3duZWRIYW5kbGUSLAoEaW5mbxgCIAIoCzIeLmxpdmVraXQucHJvdG8uQXVkaW9TdHJlYW1JbmZvIp8BChBBdWRpb1N0cmVhbUV2ZW50EhUKDXN0cmVhbV9oYW5kbGUYASACKAQSOwoOZnJhbWVfcmVjZWl2ZWQYAiABKAsyIS5saXZla2l0LnByb3RvLkF1ZGlvRnJhbWVSZWNlaXZlZEgAEiwKA2VvcxgDIAEoCzIdLmxpdmVraXQucHJvdG8uQXVkaW9TdHJlYW1FT1NIAEIJCgdtZXNzYWdlIkkKEkF1ZGlvRnJhbWVSZWNlaXZlZBIzCgVmcmFtZRgBIAIoCzIkLmxpdmVraXQucHJvdG8uT3duZWRBdWRpb0ZyYW1lQnVmZmVyIhAKDkF1ZGlvU3RyZWFtRU9TImUKEkF1ZGlvU291cmNlT3B0aW9ucxIZChFlY2hvX2NhbmNlbGxhdGlvbhgBIAIoCBIZChFub2lzZV9zdXBwcmVzc2lvbhgCIAIoCBIZChFhdXRvX2dhaW5fY29udHJvbBgDIAIoCCI/Cg9BdWRpb1NvdXJjZUluZm8SLAoEdHlwZRgCIAIoDjIeLmxpdmVraXQucHJvdG8uQXVkaW9Tb3VyY2VUeXBlIm8KEE93bmVkQXVkaW9Tb3VyY2USLQoGaGFuZGxlGAEgAigLMh0ubGl2ZWtpdC5wcm90by5GZmlPd25lZEhhbmRsZRIsCgRpbmZvGAIgAigLMh4ubGl2ZWtpdC5wcm90by5BdWRpb1NvdXJjZUluZm8iFAoSQXVkaW9SZXNhbXBsZXJJbmZvInUKE093bmVkQXVkaW9SZXNhbXBsZXISLQoGaGFuZGxlGAEgAigLMh0ubGl2ZWtpdC5wcm90by5GZmlPd25lZEhhbmRsZRIvCgRpbmZvGAIgAigLMiEubGl2ZWtpdC5wcm90by5BdWRpb1Jlc2FtcGxlckluZm8iEgoQU294UmVzYW1wbGVySW5mbyJxChFPd25lZFNveFJlc2FtcGxlchItCgZoYW5kbGUYASACKAsyHS5saXZla2l0LnByb3RvLkZmaU93bmVkSGFuZGxlEi0KBGluZm8YAiACKAsyHy5saXZla2l0LnByb3RvLlNveFJlc2FtcGxlckluZm8qSgoUU294UmVzYW1wbGVyRGF0YVR5cGUSGAoUU09YUl9EQVRBVFlQRV9JTlQxNkkQABIYChRTT1hSX0RBVEFUWVBFX0lOVDE2UxABKosBChBTb3hRdWFsaXR5UmVjaXBlEhYKElNPWFJfUVVBTElUWV9RVUlDSxAAEhQKEFNPWFJfUVVBTElUWV9MT1cQARIXChNTT1hSX1FVQUxJVFlfTUVESVVNEAISFQoRU09YUl9RVUFMSVRZX0hJR0gQAxIZChVTT1hSX1FVQUxJVFlfVkVSWUhJR0gQBCqXAQoLU294RmxhZ0JpdHMSFgoSU09YUl9ST0xMT0ZGX1NNQUxMEAASFwoTU09YUl9ST0xMT0ZGX01FRElVTRABEhUKEVNPWFJfUk9MTE9GRl9OT05FEAISGAoUU09YUl9ISUdIX1BSRUNfQ0xPQ0sQAxIZChVTT1hSX0RPVUJMRV9QUkVDSVNJT04QBBILCgdTT1hSX1ZSEAUqQQoPQXVkaW9TdHJlYW1UeXBlEhcKE0FVRElPX1NUUkVBTV9OQVRJVkUQABIVChFBVURJT19TVFJFQU1fSFRNTBABKioKD0F1ZGlvU291cmNlVHlwZRIXChNBVURJT19TT1VSQ0VfTkFUSVZFEABCEKoCDUxpdmVLaXQuUHJvdG8", [file_handle, file_track]);

/**
 * Create a new AudioStream
 * AudioStream is used to receive audio frames from a track
 *
 * @generated from message livekit.proto.NewAudioStreamRequest
 */
export type NewAudioStreamRequest = Message<"livekit.proto.NewAudioStreamRequest"> & {
  /**
   * @generated from field: required uint64 track_handle = 1;
   */
  trackHandle: bigint;

  /**
   * @generated from field: required livekit.proto.AudioStreamType type = 2;
   */
  type: AudioStreamType;

  /**
   * @generated from field: optional uint32 sample_rate = 3;
   */
  sampleRate: number;

  /**
   * @generated from field: optional uint32 num_channels = 4;
   */
  numChannels: number;
};

/**
 * Describes the message livekit.proto.NewAudioStreamRequest.
 * Use `create(NewAudioStreamRequestSchema)` to create a new message.
 */
export const NewAudioStreamRequestSchema: GenMessage<NewAudioStreamRequest> = /*@__PURE__*/
  messageDesc(file_audio_frame, 0);

/**
 * @generated from message livekit.proto.NewAudioStreamResponse
 */
export type NewAudioStreamResponse = Message<"livekit.proto.NewAudioStreamResponse"> & {
  /**
   * @generated from field: required livekit.proto.OwnedAudioStream stream = 1;
   */
  stream?: OwnedAudioStream;
};

/**
 * Describes the message livekit.proto.NewAudioStreamResponse.
 * Use `create(NewAudioStreamResponseSchema)` to create a new message.
 */
export const NewAudioStreamResponseSchema: GenMessage<NewAudioStreamResponse> = /*@__PURE__*/
  messageDesc(file_audio_frame, 1);

/**
 * @generated from message livekit.proto.AudioStreamFromParticipantRequest
 */
export type AudioStreamFromParticipantRequest = Message<"livekit.proto.AudioStreamFromParticipantRequest"> & {
  /**
   * @generated from field: required uint64 participant_handle = 1;
   */
  participantHandle: bigint;

  /**
   * @generated from field: required livekit.proto.AudioStreamType type = 2;
   */
  type: AudioStreamType;

  /**
   * @generated from field: optional livekit.proto.TrackSource track_source = 3;
   */
  trackSource: TrackSource;

  /**
   * @generated from field: optional uint32 sample_rate = 5;
   */
  sampleRate: number;

  /**
   * @generated from field: optional uint32 num_channels = 6;
   */
  numChannels: number;
};

/**
 * Describes the message livekit.proto.AudioStreamFromParticipantRequest.
 * Use `create(AudioStreamFromParticipantRequestSchema)` to create a new message.
 */
export const AudioStreamFromParticipantRequestSchema: GenMessage<AudioStreamFromParticipantRequest> = /*@__PURE__*/
  messageDesc(file_audio_frame, 2);

/**
 * @generated from message livekit.proto.AudioStreamFromParticipantResponse
 */
export type AudioStreamFromParticipantResponse = Message<"livekit.proto.AudioStreamFromParticipantResponse"> & {
  /**
   * @generated from field: required livekit.proto.OwnedAudioStream stream = 1;
   */
  stream?: OwnedAudioStream;
};

/**
 * Describes the message livekit.proto.AudioStreamFromParticipantResponse.
 * Use `create(AudioStreamFromParticipantResponseSchema)` to create a new message.
 */
export const AudioStreamFromParticipantResponseSchema: GenMessage<AudioStreamFromParticipantResponse> = /*@__PURE__*/
  messageDesc(file_audio_frame, 3);

/**
 * Create a new AudioSource
 *
 * @generated from message livekit.proto.NewAudioSourceRequest
 */
export type NewAudioSourceRequest = Message<"livekit.proto.NewAudioSourceRequest"> & {
  /**
   * @generated from field: required livekit.proto.AudioSourceType type = 1;
   */
  type: AudioSourceType;

  /**
   * @generated from field: optional livekit.proto.AudioSourceOptions options = 2;
   */
  options?: AudioSourceOptions;

  /**
   * @generated from field: required uint32 sample_rate = 3;
   */
  sampleRate: number;

  /**
   * @generated from field: required uint32 num_channels = 4;
   */
  numChannels: number;

  /**
   * @generated from field: optional uint32 queue_size_ms = 5;
   */
  queueSizeMs: number;
};

/**
 * Describes the message livekit.proto.NewAudioSourceRequest.
 * Use `create(NewAudioSourceRequestSchema)` to create a new message.
 */
export const NewAudioSourceRequestSchema: GenMessage<NewAudioSourceRequest> = /*@__PURE__*/
  messageDesc(file_audio_frame, 4);

/**
 * @generated from message livekit.proto.NewAudioSourceResponse
 */
export type NewAudioSourceResponse = Message<"livekit.proto.NewAudioSourceResponse"> & {
  /**
   * @generated from field: required livekit.proto.OwnedAudioSource source = 1;
   */
  source?: OwnedAudioSource;
};

/**
 * Describes the message livekit.proto.NewAudioSourceResponse.
 * Use `create(NewAudioSourceResponseSchema)` to create a new message.
 */
export const NewAudioSourceResponseSchema: GenMessage<NewAudioSourceResponse> = /*@__PURE__*/
  messageDesc(file_audio_frame, 5);

/**
 * Push a frame to an AudioSource 
 * The data provided must be available as long as the client receive the callback.
 *
 * @generated from message livekit.proto.CaptureAudioFrameRequest
 */
export type CaptureAudioFrameRequest = Message<"livekit.proto.CaptureAudioFrameRequest"> & {
  /**
   * @generated from field: required uint64 source_handle = 1;
   */
  sourceHandle: bigint;

  /**
   * @generated from field: required livekit.proto.AudioFrameBufferInfo buffer = 2;
   */
  buffer?: AudioFrameBufferInfo;
};

/**
 * Describes the message livekit.proto.CaptureAudioFrameRequest.
 * Use `create(CaptureAudioFrameRequestSchema)` to create a new message.
 */
export const CaptureAudioFrameRequestSchema: GenMessage<CaptureAudioFrameRequest> = /*@__PURE__*/
  messageDesc(file_audio_frame, 6);

/**
 * @generated from message livekit.proto.CaptureAudioFrameResponse
 */
export type CaptureAudioFrameResponse = Message<"livekit.proto.CaptureAudioFrameResponse"> & {
  /**
   * @generated from field: required uint64 async_id = 1;
   */
  asyncId: bigint;
};

/**
 * Describes the message livekit.proto.CaptureAudioFrameResponse.
 * Use `create(CaptureAudioFrameResponseSchema)` to create a new message.
 */
export const CaptureAudioFrameResponseSchema: GenMessage<CaptureAudioFrameResponse> = /*@__PURE__*/
  messageDesc(file_audio_frame, 7);

/**
 * @generated from message livekit.proto.CaptureAudioFrameCallback
 */
export type CaptureAudioFrameCallback = Message<"livekit.proto.CaptureAudioFrameCallback"> & {
  /**
   * @generated from field: required uint64 async_id = 1;
   */
  asyncId: bigint;

  /**
   * @generated from field: optional string error = 2;
   */
  error: string;
};

/**
 * Describes the message livekit.proto.CaptureAudioFrameCallback.
 * Use `create(CaptureAudioFrameCallbackSchema)` to create a new message.
 */
export const CaptureAudioFrameCallbackSchema: GenMessage<CaptureAudioFrameCallback> = /*@__PURE__*/
  messageDesc(file_audio_frame, 8);

/**
 * @generated from message livekit.proto.ClearAudioBufferRequest
 */
export type ClearAudioBufferRequest = Message<"livekit.proto.ClearAudioBufferRequest"> & {
  /**
   * @generated from field: required uint64 source_handle = 1;
   */
  sourceHandle: bigint;
};

/**
 * Describes the message livekit.proto.ClearAudioBufferRequest.
 * Use `create(ClearAudioBufferRequestSchema)` to create a new message.
 */
export const ClearAudioBufferRequestSchema: GenMessage<ClearAudioBufferRequest> = /*@__PURE__*/
  messageDesc(file_audio_frame, 9);

/**
 * @generated from message livekit.proto.ClearAudioBufferResponse
 */
export type ClearAudioBufferResponse = Message<"livekit.proto.ClearAudioBufferResponse"> & {
};

/**
 * Describes the message livekit.proto.ClearAudioBufferResponse.
 * Use `create(ClearAudioBufferResponseSchema)` to create a new message.
 */
export const ClearAudioBufferResponseSchema: GenMessage<ClearAudioBufferResponse> = /*@__PURE__*/
  messageDesc(file_audio_frame, 10);

/**
 * Create a new AudioResampler
 *
 * @generated from message livekit.proto.NewAudioResamplerRequest
 */
export type NewAudioResamplerRequest = Message<"livekit.proto.NewAudioResamplerRequest"> & {
};

/**
 * Describes the message livekit.proto.NewAudioResamplerRequest.
 * Use `create(NewAudioResamplerRequestSchema)` to create a new message.
 */
export const NewAudioResamplerRequestSchema: GenMessage<NewAudioResamplerRequest> = /*@__PURE__*/
  messageDesc(file_audio_frame, 11);

/**
 * @generated from message livekit.proto.NewAudioResamplerResponse
 */
export type NewAudioResamplerResponse = Message<"livekit.proto.NewAudioResamplerResponse"> & {
  /**
   * @generated from field: required livekit.proto.OwnedAudioResampler resampler = 1;
   */
  resampler?: OwnedAudioResampler;
};

/**
 * Describes the message livekit.proto.NewAudioResamplerResponse.
 * Use `create(NewAudioResamplerResponseSchema)` to create a new message.
 */
export const NewAudioResamplerResponseSchema: GenMessage<NewAudioResamplerResponse> = /*@__PURE__*/
  messageDesc(file_audio_frame, 12);

/**
 * Remix and resample an audio frame
 *
 * @generated from message livekit.proto.RemixAndResampleRequest
 */
export type RemixAndResampleRequest = Message<"livekit.proto.RemixAndResampleRequest"> & {
  /**
   * @generated from field: required uint64 resampler_handle = 1;
   */
  resamplerHandle: bigint;

  /**
   * @generated from field: required livekit.proto.AudioFrameBufferInfo buffer = 2;
   */
  buffer?: AudioFrameBufferInfo;

  /**
   * @generated from field: required uint32 num_channels = 3;
   */
  numChannels: number;

  /**
   * @generated from field: required uint32 sample_rate = 4;
   */
  sampleRate: number;
};

/**
 * Describes the message livekit.proto.RemixAndResampleRequest.
 * Use `create(RemixAndResampleRequestSchema)` to create a new message.
 */
export const RemixAndResampleRequestSchema: GenMessage<RemixAndResampleRequest> = /*@__PURE__*/
  messageDesc(file_audio_frame, 13);

/**
 * @generated from message livekit.proto.RemixAndResampleResponse
 */
export type RemixAndResampleResponse = Message<"livekit.proto.RemixAndResampleResponse"> & {
  /**
   * @generated from field: required livekit.proto.OwnedAudioFrameBuffer buffer = 1;
   */
  buffer?: OwnedAudioFrameBuffer;
};

/**
 * Describes the message livekit.proto.RemixAndResampleResponse.
 * Use `create(RemixAndResampleResponseSchema)` to create a new message.
 */
export const RemixAndResampleResponseSchema: GenMessage<RemixAndResampleResponse> = /*@__PURE__*/
  messageDesc(file_audio_frame, 14);

/**
 * @generated from message livekit.proto.NewSoxResamplerRequest
 */
export type NewSoxResamplerRequest = Message<"livekit.proto.NewSoxResamplerRequest"> & {
  /**
   * @generated from field: required double input_rate = 1;
   */
  inputRate: number;

  /**
   * @generated from field: required double output_rate = 2;
   */
  outputRate: number;

  /**
   * @generated from field: required uint32 num_channels = 3;
   */
  numChannels: number;

  /**
   * @generated from field: required livekit.proto.SoxResamplerDataType input_data_type = 4;
   */
  inputDataType: SoxResamplerDataType;

  /**
   * @generated from field: required livekit.proto.SoxResamplerDataType output_data_type = 5;
   */
  outputDataType: SoxResamplerDataType;

  /**
   * @generated from field: required livekit.proto.SoxQualityRecipe quality_recipe = 6;
   */
  qualityRecipe: SoxQualityRecipe;

  /**
   * @generated from field: optional uint32 flags = 7;
   */
  flags: number;
};

/**
 * Describes the message livekit.proto.NewSoxResamplerRequest.
 * Use `create(NewSoxResamplerRequestSchema)` to create a new message.
 */
export const NewSoxResamplerRequestSchema: GenMessage<NewSoxResamplerRequest> = /*@__PURE__*/
  messageDesc(file_audio_frame, 15);

/**
 * @generated from message livekit.proto.NewSoxResamplerResponse
 */
export type NewSoxResamplerResponse = Message<"livekit.proto.NewSoxResamplerResponse"> & {
  /**
   * @generated from oneof livekit.proto.NewSoxResamplerResponse.message
   */
  message: {
    /**
     * @generated from field: livekit.proto.OwnedSoxResampler resampler = 1;
     */
    value: OwnedSoxResampler;
    case: "resampler";
  } | {
    /**
     * @generated from field: string error = 2;
     */
    value: string;
    case: "error";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message livekit.proto.NewSoxResamplerResponse.
 * Use `create(NewSoxResamplerResponseSchema)` to create a new message.
 */
export const NewSoxResamplerResponseSchema: GenMessage<NewSoxResamplerResponse> = /*@__PURE__*/
  messageDesc(file_audio_frame, 16);

/**
 * @generated from message livekit.proto.PushSoxResamplerRequest
 */
export type PushSoxResamplerRequest = Message<"livekit.proto.PushSoxResamplerRequest"> & {
  /**
   * @generated from field: required uint64 resampler_handle = 1;
   */
  resamplerHandle: bigint;

  /**
   * *const i16
   *
   * @generated from field: required uint64 data_ptr = 2;
   */
  dataPtr: bigint;

  /**
   * in bytes
   *
   * @generated from field: required uint32 size = 3;
   */
  size: number;
};

/**
 * Describes the message livekit.proto.PushSoxResamplerRequest.
 * Use `create(PushSoxResamplerRequestSchema)` to create a new message.
 */
export const PushSoxResamplerRequestSchema: GenMessage<PushSoxResamplerRequest> = /*@__PURE__*/
  messageDesc(file_audio_frame, 17);

/**
 * @generated from message livekit.proto.PushSoxResamplerResponse
 */
export type PushSoxResamplerResponse = Message<"livekit.proto.PushSoxResamplerResponse"> & {
  /**
   * *const i16 (could be null)
   *
   * @generated from field: required uint64 output_ptr = 1;
   */
  outputPtr: bigint;

  /**
   * in bytes
   *
   * @generated from field: required uint32 size = 2;
   */
  size: number;

  /**
   * @generated from field: optional string error = 3;
   */
  error: string;
};

/**
 * Describes the message livekit.proto.PushSoxResamplerResponse.
 * Use `create(PushSoxResamplerResponseSchema)` to create a new message.
 */
export const PushSoxResamplerResponseSchema: GenMessage<PushSoxResamplerResponse> = /*@__PURE__*/
  messageDesc(file_audio_frame, 18);

/**
 * @generated from message livekit.proto.FlushSoxResamplerRequest
 */
export type FlushSoxResamplerRequest = Message<"livekit.proto.FlushSoxResamplerRequest"> & {
  /**
   * @generated from field: required uint64 resampler_handle = 1;
   */
  resamplerHandle: bigint;
};

/**
 * Describes the message livekit.proto.FlushSoxResamplerRequest.
 * Use `create(FlushSoxResamplerRequestSchema)` to create a new message.
 */
export const FlushSoxResamplerRequestSchema: GenMessage<FlushSoxResamplerRequest> = /*@__PURE__*/
  messageDesc(file_audio_frame, 19);

/**
 * @generated from message livekit.proto.FlushSoxResamplerResponse
 */
export type FlushSoxResamplerResponse = Message<"livekit.proto.FlushSoxResamplerResponse"> & {
  /**
   * *const i16 (could be null)
   *
   * @generated from field: required uint64 output_ptr = 1;
   */
  outputPtr: bigint;

  /**
   * in bytes
   *
   * @generated from field: required uint32 size = 2;
   */
  size: number;

  /**
   * @generated from field: optional string error = 3;
   */
  error: string;
};

/**
 * Describes the message livekit.proto.FlushSoxResamplerResponse.
 * Use `create(FlushSoxResamplerResponseSchema)` to create a new message.
 */
export const FlushSoxResamplerResponseSchema: GenMessage<FlushSoxResamplerResponse> = /*@__PURE__*/
  messageDesc(file_audio_frame, 20);

/**
 * @generated from message livekit.proto.AudioFrameBufferInfo
 */
export type AudioFrameBufferInfo = Message<"livekit.proto.AudioFrameBufferInfo"> & {
  /**
   * *const i16
   *
   * @generated from field: required uint64 data_ptr = 1;
   */
  dataPtr: bigint;

  /**
   * @generated from field: required uint32 num_channels = 2;
   */
  numChannels: number;

  /**
   * @generated from field: required uint32 sample_rate = 3;
   */
  sampleRate: number;

  /**
   * @generated from field: required uint32 samples_per_channel = 4;
   */
  samplesPerChannel: number;
};

/**
 * Describes the message livekit.proto.AudioFrameBufferInfo.
 * Use `create(AudioFrameBufferInfoSchema)` to create a new message.
 */
export const AudioFrameBufferInfoSchema: GenMessage<AudioFrameBufferInfo> = /*@__PURE__*/
  messageDesc(file_audio_frame, 21);

/**
 * @generated from message livekit.proto.OwnedAudioFrameBuffer
 */
export type OwnedAudioFrameBuffer = Message<"livekit.proto.OwnedAudioFrameBuffer"> & {
  /**
   * @generated from field: required livekit.proto.FfiOwnedHandle handle = 1;
   */
  handle?: FfiOwnedHandle;

  /**
   * @generated from field: required livekit.proto.AudioFrameBufferInfo info = 2;
   */
  info?: AudioFrameBufferInfo;
};

/**
 * Describes the message livekit.proto.OwnedAudioFrameBuffer.
 * Use `create(OwnedAudioFrameBufferSchema)` to create a new message.
 */
export const OwnedAudioFrameBufferSchema: GenMessage<OwnedAudioFrameBuffer> = /*@__PURE__*/
  messageDesc(file_audio_frame, 22);

/**
 * @generated from message livekit.proto.AudioStreamInfo
 */
export type AudioStreamInfo = Message<"livekit.proto.AudioStreamInfo"> & {
  /**
   * @generated from field: required livekit.proto.AudioStreamType type = 1;
   */
  type: AudioStreamType;
};

/**
 * Describes the message livekit.proto.AudioStreamInfo.
 * Use `create(AudioStreamInfoSchema)` to create a new message.
 */
export const AudioStreamInfoSchema: GenMessage<AudioStreamInfo> = /*@__PURE__*/
  messageDesc(file_audio_frame, 23);

/**
 * @generated from message livekit.proto.OwnedAudioStream
 */
export type OwnedAudioStream = Message<"livekit.proto.OwnedAudioStream"> & {
  /**
   * @generated from field: required livekit.proto.FfiOwnedHandle handle = 1;
   */
  handle?: FfiOwnedHandle;

  /**
   * @generated from field: required livekit.proto.AudioStreamInfo info = 2;
   */
  info?: AudioStreamInfo;
};

/**
 * Describes the message livekit.proto.OwnedAudioStream.
 * Use `create(OwnedAudioStreamSchema)` to create a new message.
 */
export const OwnedAudioStreamSchema: GenMessage<OwnedAudioStream> = /*@__PURE__*/
  messageDesc(file_audio_frame, 24);

/**
 * @generated from message livekit.proto.AudioStreamEvent
 */
export type AudioStreamEvent = Message<"livekit.proto.AudioStreamEvent"> & {
  /**
   * @generated from field: required uint64 stream_handle = 1;
   */
  streamHandle: bigint;

  /**
   * @generated from oneof livekit.proto.AudioStreamEvent.message
   */
  message: {
    /**
     * @generated from field: livekit.proto.AudioFrameReceived frame_received = 2;
     */
    value: AudioFrameReceived;
    case: "frameReceived";
  } | {
    /**
     * @generated from field: livekit.proto.AudioStreamEOS eos = 3;
     */
    value: AudioStreamEOS;
    case: "eos";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message livekit.proto.AudioStreamEvent.
 * Use `create(AudioStreamEventSchema)` to create a new message.
 */
export const AudioStreamEventSchema: GenMessage<AudioStreamEvent> = /*@__PURE__*/
  messageDesc(file_audio_frame, 25);

/**
 * @generated from message livekit.proto.AudioFrameReceived
 */
export type AudioFrameReceived = Message<"livekit.proto.AudioFrameReceived"> & {
  /**
   * @generated from field: required livekit.proto.OwnedAudioFrameBuffer frame = 1;
   */
  frame?: OwnedAudioFrameBuffer;
};

/**
 * Describes the message livekit.proto.AudioFrameReceived.
 * Use `create(AudioFrameReceivedSchema)` to create a new message.
 */
export const AudioFrameReceivedSchema: GenMessage<AudioFrameReceived> = /*@__PURE__*/
  messageDesc(file_audio_frame, 26);

/**
 * @generated from message livekit.proto.AudioStreamEOS
 */
export type AudioStreamEOS = Message<"livekit.proto.AudioStreamEOS"> & {
};

/**
 * Describes the message livekit.proto.AudioStreamEOS.
 * Use `create(AudioStreamEOSSchema)` to create a new message.
 */
export const AudioStreamEOSSchema: GenMessage<AudioStreamEOS> = /*@__PURE__*/
  messageDesc(file_audio_frame, 27);

/**
 * @generated from message livekit.proto.AudioSourceOptions
 */
export type AudioSourceOptions = Message<"livekit.proto.AudioSourceOptions"> & {
  /**
   * @generated from field: required bool echo_cancellation = 1;
   */
  echoCancellation: boolean;

  /**
   * @generated from field: required bool noise_suppression = 2;
   */
  noiseSuppression: boolean;

  /**
   * @generated from field: required bool auto_gain_control = 3;
   */
  autoGainControl: boolean;
};

/**
 * Describes the message livekit.proto.AudioSourceOptions.
 * Use `create(AudioSourceOptionsSchema)` to create a new message.
 */
export const AudioSourceOptionsSchema: GenMessage<AudioSourceOptions> = /*@__PURE__*/
  messageDesc(file_audio_frame, 28);

/**
 * @generated from message livekit.proto.AudioSourceInfo
 */
export type AudioSourceInfo = Message<"livekit.proto.AudioSourceInfo"> & {
  /**
   * @generated from field: required livekit.proto.AudioSourceType type = 2;
   */
  type: AudioSourceType;
};

/**
 * Describes the message livekit.proto.AudioSourceInfo.
 * Use `create(AudioSourceInfoSchema)` to create a new message.
 */
export const AudioSourceInfoSchema: GenMessage<AudioSourceInfo> = /*@__PURE__*/
  messageDesc(file_audio_frame, 29);

/**
 * @generated from message livekit.proto.OwnedAudioSource
 */
export type OwnedAudioSource = Message<"livekit.proto.OwnedAudioSource"> & {
  /**
   * @generated from field: required livekit.proto.FfiOwnedHandle handle = 1;
   */
  handle?: FfiOwnedHandle;

  /**
   * @generated from field: required livekit.proto.AudioSourceInfo info = 2;
   */
  info?: AudioSourceInfo;
};

/**
 * Describes the message livekit.proto.OwnedAudioSource.
 * Use `create(OwnedAudioSourceSchema)` to create a new message.
 */
export const OwnedAudioSourceSchema: GenMessage<OwnedAudioSource> = /*@__PURE__*/
  messageDesc(file_audio_frame, 30);

/**
 * @generated from message livekit.proto.AudioResamplerInfo
 */
export type AudioResamplerInfo = Message<"livekit.proto.AudioResamplerInfo"> & {
};

/**
 * Describes the message livekit.proto.AudioResamplerInfo.
 * Use `create(AudioResamplerInfoSchema)` to create a new message.
 */
export const AudioResamplerInfoSchema: GenMessage<AudioResamplerInfo> = /*@__PURE__*/
  messageDesc(file_audio_frame, 31);

/**
 * @generated from message livekit.proto.OwnedAudioResampler
 */
export type OwnedAudioResampler = Message<"livekit.proto.OwnedAudioResampler"> & {
  /**
   * @generated from field: required livekit.proto.FfiOwnedHandle handle = 1;
   */
  handle?: FfiOwnedHandle;

  /**
   * @generated from field: required livekit.proto.AudioResamplerInfo info = 2;
   */
  info?: AudioResamplerInfo;
};

/**
 * Describes the message livekit.proto.OwnedAudioResampler.
 * Use `create(OwnedAudioResamplerSchema)` to create a new message.
 */
export const OwnedAudioResamplerSchema: GenMessage<OwnedAudioResampler> = /*@__PURE__*/
  messageDesc(file_audio_frame, 32);

/**
 * @generated from message livekit.proto.SoxResamplerInfo
 */
export type SoxResamplerInfo = Message<"livekit.proto.SoxResamplerInfo"> & {
};

/**
 * Describes the message livekit.proto.SoxResamplerInfo.
 * Use `create(SoxResamplerInfoSchema)` to create a new message.
 */
export const SoxResamplerInfoSchema: GenMessage<SoxResamplerInfo> = /*@__PURE__*/
  messageDesc(file_audio_frame, 33);

/**
 * @generated from message livekit.proto.OwnedSoxResampler
 */
export type OwnedSoxResampler = Message<"livekit.proto.OwnedSoxResampler"> & {
  /**
   * @generated from field: required livekit.proto.FfiOwnedHandle handle = 1;
   */
  handle?: FfiOwnedHandle;

  /**
   * @generated from field: required livekit.proto.SoxResamplerInfo info = 2;
   */
  info?: SoxResamplerInfo;
};

/**
 * Describes the message livekit.proto.OwnedSoxResampler.
 * Use `create(OwnedSoxResamplerSchema)` to create a new message.
 */
export const OwnedSoxResamplerSchema: GenMessage<OwnedSoxResampler> = /*@__PURE__*/
  messageDesc(file_audio_frame, 34);

/**
 * @generated from enum livekit.proto.SoxResamplerDataType
 */
export enum SoxResamplerDataType {
  /**
   * TODO(theomonnom): support other datatypes (shouldn't really be needed)
   *
   * @generated from enum value: SOXR_DATATYPE_INT16I = 0;
   */
  SOXR_DATATYPE_INT16I = 0,

  /**
   * @generated from enum value: SOXR_DATATYPE_INT16S = 1;
   */
  SOXR_DATATYPE_INT16S = 1,
}

/**
 * Describes the enum livekit.proto.SoxResamplerDataType.
 */
export const SoxResamplerDataTypeSchema: GenEnum<SoxResamplerDataType> = /*@__PURE__*/
  enumDesc(file_audio_frame, 0);

/**
 * @generated from enum livekit.proto.SoxQualityRecipe
 */
export enum SoxQualityRecipe {
  /**
   * @generated from enum value: SOXR_QUALITY_QUICK = 0;
   */
  SOXR_QUALITY_QUICK = 0,

  /**
   * @generated from enum value: SOXR_QUALITY_LOW = 1;
   */
  SOXR_QUALITY_LOW = 1,

  /**
   * @generated from enum value: SOXR_QUALITY_MEDIUM = 2;
   */
  SOXR_QUALITY_MEDIUM = 2,

  /**
   * @generated from enum value: SOXR_QUALITY_HIGH = 3;
   */
  SOXR_QUALITY_HIGH = 3,

  /**
   * @generated from enum value: SOXR_QUALITY_VERYHIGH = 4;
   */
  SOXR_QUALITY_VERYHIGH = 4,
}

/**
 * Describes the enum livekit.proto.SoxQualityRecipe.
 */
export const SoxQualityRecipeSchema: GenEnum<SoxQualityRecipe> = /*@__PURE__*/
  enumDesc(file_audio_frame, 1);

/**
 * @generated from enum livekit.proto.SoxFlagBits
 */
export enum SoxFlagBits {
  /**
   * 1 << 0
   *
   * @generated from enum value: SOXR_ROLLOFF_SMALL = 0;
   */
  SOXR_ROLLOFF_SMALL = 0,

  /**
   * 1 << 1
   *
   * @generated from enum value: SOXR_ROLLOFF_MEDIUM = 1;
   */
  SOXR_ROLLOFF_MEDIUM = 1,

  /**
   * 1 << 2
   *
   * @generated from enum value: SOXR_ROLLOFF_NONE = 2;
   */
  SOXR_ROLLOFF_NONE = 2,

  /**
   * 1 << 3
   *
   * @generated from enum value: SOXR_HIGH_PREC_CLOCK = 3;
   */
  SOXR_HIGH_PREC_CLOCK = 3,

  /**
   * 1 << 4
   *
   * @generated from enum value: SOXR_DOUBLE_PRECISION = 4;
   */
  SOXR_DOUBLE_PRECISION = 4,

  /**
   * 1 << 5
   *
   * @generated from enum value: SOXR_VR = 5;
   */
  SOXR_VR = 5,
}

/**
 * Describes the enum livekit.proto.SoxFlagBits.
 */
export const SoxFlagBitsSchema: GenEnum<SoxFlagBits> = /*@__PURE__*/
  enumDesc(file_audio_frame, 2);

/**
 * @generated from enum livekit.proto.AudioStreamType
 */
export enum AudioStreamType {
  /**
   * @generated from enum value: AUDIO_STREAM_NATIVE = 0;
   */
  AUDIO_STREAM_NATIVE = 0,

  /**
   * @generated from enum value: AUDIO_STREAM_HTML = 1;
   */
  AUDIO_STREAM_HTML = 1,
}

/**
 * Describes the enum livekit.proto.AudioStreamType.
 */
export const AudioStreamTypeSchema: GenEnum<AudioStreamType> = /*@__PURE__*/
  enumDesc(file_audio_frame, 3);

/**
 * @generated from enum livekit.proto.AudioSourceType
 */
export enum AudioSourceType {
  /**
   * @generated from enum value: AUDIO_SOURCE_NATIVE = 0;
   */
  AUDIO_SOURCE_NATIVE = 0,
}

/**
 * Describes the enum livekit.proto.AudioSourceType.
 */
export const AudioSourceTypeSchema: GenEnum<AudioSourceType> = /*@__PURE__*/
  enumDesc(file_audio_frame, 4);

