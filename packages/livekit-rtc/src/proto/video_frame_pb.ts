// Copyright 2023 LiveKit, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.2.0 with parameter "target=ts,import_extension=js"
// @generated from file video_frame.proto (package livekit.proto, syntax proto2)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { FfiOwnedHandle } from "./handle_pb.js";
import { file_handle } from "./handle_pb.js";
import type { TrackSource } from "./track_pb.js";
import { file_track } from "./track_pb.js";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file video_frame.proto.
 */
export const file_video_frame: GenFile = /*@__PURE__*/
  fileDesc("ChF2aWRlb19mcmFtZS5wcm90bxINbGl2ZWtpdC5wcm90byKlAQoVTmV3VmlkZW9TdHJlYW1SZXF1ZXN0EhQKDHRyYWNrX2hhbmRsZRgBIAIoBBIsCgR0eXBlGAIgAigOMh4ubGl2ZWtpdC5wcm90by5WaWRlb1N0cmVhbVR5cGUSLgoGZm9ybWF0GAMgASgOMh4ubGl2ZWtpdC5wcm90by5WaWRlb0J1ZmZlclR5cGUSGAoQbm9ybWFsaXplX3N0cmlkZRgEIAEoCCJJChZOZXdWaWRlb1N0cmVhbVJlc3BvbnNlEi8KBnN0cmVhbRgBIAIoCzIfLmxpdmVraXQucHJvdG8uT3duZWRWaWRlb1N0cmVhbSLpAQohVmlkZW9TdHJlYW1Gcm9tUGFydGljaXBhbnRSZXF1ZXN0EhoKEnBhcnRpY2lwYW50X2hhbmRsZRgBIAIoBBIsCgR0eXBlGAIgAigOMh4ubGl2ZWtpdC5wcm90by5WaWRlb1N0cmVhbVR5cGUSMAoMdHJhY2tfc291cmNlGAMgAigOMhoubGl2ZWtpdC5wcm90by5UcmFja1NvdXJjZRIuCgZmb3JtYXQYBCABKA4yHi5saXZla2l0LnByb3RvLlZpZGVvQnVmZmVyVHlwZRIYChBub3JtYWxpemVfc3RyaWRlGAUgASgIIlUKIlZpZGVvU3RyZWFtRnJvbVBhcnRpY2lwYW50UmVzcG9uc2USLwoGc3RyZWFtGAEgAigLMh8ubGl2ZWtpdC5wcm90by5Pd25lZFZpZGVvU3RyZWFtIn8KFU5ld1ZpZGVvU291cmNlUmVxdWVzdBIsCgR0eXBlGAEgAigOMh4ubGl2ZWtpdC5wcm90by5WaWRlb1NvdXJjZVR5cGUSOAoKcmVzb2x1dGlvbhgCIAIoCzIkLmxpdmVraXQucHJvdG8uVmlkZW9Tb3VyY2VSZXNvbHV0aW9uIkkKFk5ld1ZpZGVvU291cmNlUmVzcG9uc2USLwoGc291cmNlGAEgAigLMh8ubGl2ZWtpdC5wcm90by5Pd25lZFZpZGVvU291cmNlIqcBChhDYXB0dXJlVmlkZW9GcmFtZVJlcXVlc3QSFQoNc291cmNlX2hhbmRsZRgBIAIoBBIuCgZidWZmZXIYAiACKAsyHi5saXZla2l0LnByb3RvLlZpZGVvQnVmZmVySW5mbxIUCgx0aW1lc3RhbXBfdXMYAyACKAMSLgoIcm90YXRpb24YBCACKA4yHC5saXZla2l0LnByb3RvLlZpZGVvUm90YXRpb24iGwoZQ2FwdHVyZVZpZGVvRnJhbWVSZXNwb25zZSKHAQoTVmlkZW9Db252ZXJ0UmVxdWVzdBIOCgZmbGlwX3kYASABKAgSLgoGYnVmZmVyGAIgAigLMh4ubGl2ZWtpdC5wcm90by5WaWRlb0J1ZmZlckluZm8SMAoIZHN0X3R5cGUYAyACKA4yHi5saXZla2l0LnByb3RvLlZpZGVvQnVmZmVyVHlwZSJlChRWaWRlb0NvbnZlcnRSZXNwb25zZRIPCgVlcnJvchgBIAEoCUgAEjEKBmJ1ZmZlchgCIAEoCzIfLmxpdmVraXQucHJvdG8uT3duZWRWaWRlb0J1ZmZlckgAQgkKB21lc3NhZ2UiRAoPVmlkZW9SZXNvbHV0aW9uEg0KBXdpZHRoGAEgAigNEg4KBmhlaWdodBgCIAIoDRISCgpmcmFtZV9yYXRlGAMgAigBIoMCCg9WaWRlb0J1ZmZlckluZm8SLAoEdHlwZRgBIAIoDjIeLmxpdmVraXQucHJvdG8uVmlkZW9CdWZmZXJUeXBlEg0KBXdpZHRoGAIgAigNEg4KBmhlaWdodBgDIAIoDRIQCghkYXRhX3B0chgEIAIoBBIOCgZzdHJpZGUYBiACKA0SQAoKY29tcG9uZW50cxgHIAMoCzIsLmxpdmVraXQucHJvdG8uVmlkZW9CdWZmZXJJbmZvLkNvbXBvbmVudEluZm8aPwoNQ29tcG9uZW50SW5mbxIQCghkYXRhX3B0chgBIAIoBBIOCgZzdHJpZGUYAiACKA0SDAoEc2l6ZRgDIAIoDSJvChBPd25lZFZpZGVvQnVmZmVyEi0KBmhhbmRsZRgBIAIoCzIdLmxpdmVraXQucHJvdG8uRmZpT3duZWRIYW5kbGUSLAoEaW5mbxgCIAIoCzIeLmxpdmVraXQucHJvdG8uVmlkZW9CdWZmZXJJbmZvIj8KD1ZpZGVvU3RyZWFtSW5mbxIsCgR0eXBlGAEgAigOMh4ubGl2ZWtpdC5wcm90by5WaWRlb1N0cmVhbVR5cGUibwoQT3duZWRWaWRlb1N0cmVhbRItCgZoYW5kbGUYASACKAsyHS5saXZla2l0LnByb3RvLkZmaU93bmVkSGFuZGxlEiwKBGluZm8YAiACKAsyHi5saXZla2l0LnByb3RvLlZpZGVvU3RyZWFtSW5mbyKfAQoQVmlkZW9TdHJlYW1FdmVudBIVCg1zdHJlYW1faGFuZGxlGAEgAigEEjsKDmZyYW1lX3JlY2VpdmVkGAIgASgLMiEubGl2ZWtpdC5wcm90by5WaWRlb0ZyYW1lUmVjZWl2ZWRIABIsCgNlb3MYAyABKAsyHS5saXZla2l0LnByb3RvLlZpZGVvU3RyZWFtRU9TSABCCQoHbWVzc2FnZSKLAQoSVmlkZW9GcmFtZVJlY2VpdmVkEi8KBmJ1ZmZlchgBIAIoCzIfLmxpdmVraXQucHJvdG8uT3duZWRWaWRlb0J1ZmZlchIUCgx0aW1lc3RhbXBfdXMYAiACKAMSLgoIcm90YXRpb24YAyACKA4yHC5saXZla2l0LnByb3RvLlZpZGVvUm90YXRpb24iEAoOVmlkZW9TdHJlYW1FT1MiNgoVVmlkZW9Tb3VyY2VSZXNvbHV0aW9uEg0KBXdpZHRoGAEgAigNEg4KBmhlaWdodBgCIAIoDSI/Cg9WaWRlb1NvdXJjZUluZm8SLAoEdHlwZRgBIAIoDjIeLmxpdmVraXQucHJvdG8uVmlkZW9Tb3VyY2VUeXBlIm8KEE93bmVkVmlkZW9Tb3VyY2USLQoGaGFuZGxlGAEgAigLMh0ubGl2ZWtpdC5wcm90by5GZmlPd25lZEhhbmRsZRIsCgRpbmZvGAIgAigLMh4ubGl2ZWtpdC5wcm90by5WaWRlb1NvdXJjZUluZm8qMQoKVmlkZW9Db2RlYxIHCgNWUDgQABIICgRIMjY0EAESBwoDQVYxEAISBwoDVlA5EAMqbAoNVmlkZW9Sb3RhdGlvbhIUChBWSURFT19ST1RBVElPTl8wEAASFQoRVklERU9fUk9UQVRJT05fOTAQARIWChJWSURFT19ST1RBVElPTl8xODAQAhIWChJWSURFT19ST1RBVElPTl8yNzAQAyqBAQoPVmlkZW9CdWZmZXJUeXBlEggKBFJHQkEQABIICgRBQkdSEAESCAoEQVJHQhACEggKBEJHUkEQAxIJCgVSR0IyNBAEEggKBEk0MjAQBRIJCgVJNDIwQRAGEggKBEk0MjIQBxIICgRJNDQ0EAgSCAoESTAxMBAJEggKBE5WMTIQCipZCg9WaWRlb1N0cmVhbVR5cGUSFwoTVklERU9fU1RSRUFNX05BVElWRRAAEhYKElZJREVPX1NUUkVBTV9XRUJHTBABEhUKEVZJREVPX1NUUkVBTV9IVE1MEAIqKgoPVmlkZW9Tb3VyY2VUeXBlEhcKE1ZJREVPX1NPVVJDRV9OQVRJVkUQAEIQqgINTGl2ZUtpdC5Qcm90bw", [file_handle, file_track]);

/**
 * Create a new VideoStream
 * VideoStream is used to receive video frames from a track
 *
 * @generated from message livekit.proto.NewVideoStreamRequest
 */
export type NewVideoStreamRequest = Message<"livekit.proto.NewVideoStreamRequest"> & {
  /**
   * @generated from field: required uint64 track_handle = 1;
   */
  trackHandle: bigint;

  /**
   * @generated from field: required livekit.proto.VideoStreamType type = 2;
   */
  type: VideoStreamType;

  /**
   * Get the frame on a specific format
   *
   * @generated from field: optional livekit.proto.VideoBufferType format = 3;
   */
  format: VideoBufferType;

  /**
   * if true, stride will be set to width/chroma_width
   *
   * @generated from field: optional bool normalize_stride = 4;
   */
  normalizeStride: boolean;
};

/**
 * Describes the message livekit.proto.NewVideoStreamRequest.
 * Use `create(NewVideoStreamRequestSchema)` to create a new message.
 */
export const NewVideoStreamRequestSchema: GenMessage<NewVideoStreamRequest> = /*@__PURE__*/
  messageDesc(file_video_frame, 0);

/**
 * @generated from message livekit.proto.NewVideoStreamResponse
 */
export type NewVideoStreamResponse = Message<"livekit.proto.NewVideoStreamResponse"> & {
  /**
   * @generated from field: required livekit.proto.OwnedVideoStream stream = 1;
   */
  stream?: OwnedVideoStream;
};

/**
 * Describes the message livekit.proto.NewVideoStreamResponse.
 * Use `create(NewVideoStreamResponseSchema)` to create a new message.
 */
export const NewVideoStreamResponseSchema: GenMessage<NewVideoStreamResponse> = /*@__PURE__*/
  messageDesc(file_video_frame, 1);

/**
 * Request a video stream from a participant
 *
 * @generated from message livekit.proto.VideoStreamFromParticipantRequest
 */
export type VideoStreamFromParticipantRequest = Message<"livekit.proto.VideoStreamFromParticipantRequest"> & {
  /**
   * @generated from field: required uint64 participant_handle = 1;
   */
  participantHandle: bigint;

  /**
   * @generated from field: required livekit.proto.VideoStreamType type = 2;
   */
  type: VideoStreamType;

  /**
   * @generated from field: required livekit.proto.TrackSource track_source = 3;
   */
  trackSource: TrackSource;

  /**
   * @generated from field: optional livekit.proto.VideoBufferType format = 4;
   */
  format: VideoBufferType;

  /**
   * @generated from field: optional bool normalize_stride = 5;
   */
  normalizeStride: boolean;
};

/**
 * Describes the message livekit.proto.VideoStreamFromParticipantRequest.
 * Use `create(VideoStreamFromParticipantRequestSchema)` to create a new message.
 */
export const VideoStreamFromParticipantRequestSchema: GenMessage<VideoStreamFromParticipantRequest> = /*@__PURE__*/
  messageDesc(file_video_frame, 2);

/**
 * @generated from message livekit.proto.VideoStreamFromParticipantResponse
 */
export type VideoStreamFromParticipantResponse = Message<"livekit.proto.VideoStreamFromParticipantResponse"> & {
  /**
   * @generated from field: required livekit.proto.OwnedVideoStream stream = 1;
   */
  stream?: OwnedVideoStream;
};

/**
 * Describes the message livekit.proto.VideoStreamFromParticipantResponse.
 * Use `create(VideoStreamFromParticipantResponseSchema)` to create a new message.
 */
export const VideoStreamFromParticipantResponseSchema: GenMessage<VideoStreamFromParticipantResponse> = /*@__PURE__*/
  messageDesc(file_video_frame, 3);

/**
 * Create a new VideoSource
 * VideoSource is used to send video frame to a track
 *
 * @generated from message livekit.proto.NewVideoSourceRequest
 */
export type NewVideoSourceRequest = Message<"livekit.proto.NewVideoSourceRequest"> & {
  /**
   * @generated from field: required livekit.proto.VideoSourceType type = 1;
   */
  type: VideoSourceType;

  /**
   * Used to determine which encodings to use + simulcast layers
   * Most of the time it corresponds to the source resolution 
   *
   * @generated from field: required livekit.proto.VideoSourceResolution resolution = 2;
   */
  resolution?: VideoSourceResolution;
};

/**
 * Describes the message livekit.proto.NewVideoSourceRequest.
 * Use `create(NewVideoSourceRequestSchema)` to create a new message.
 */
export const NewVideoSourceRequestSchema: GenMessage<NewVideoSourceRequest> = /*@__PURE__*/
  messageDesc(file_video_frame, 4);

/**
 * @generated from message livekit.proto.NewVideoSourceResponse
 */
export type NewVideoSourceResponse = Message<"livekit.proto.NewVideoSourceResponse"> & {
  /**
   * @generated from field: required livekit.proto.OwnedVideoSource source = 1;
   */
  source?: OwnedVideoSource;
};

/**
 * Describes the message livekit.proto.NewVideoSourceResponse.
 * Use `create(NewVideoSourceResponseSchema)` to create a new message.
 */
export const NewVideoSourceResponseSchema: GenMessage<NewVideoSourceResponse> = /*@__PURE__*/
  messageDesc(file_video_frame, 5);

/**
 * Push a frame to a VideoSource
 *
 * @generated from message livekit.proto.CaptureVideoFrameRequest
 */
export type CaptureVideoFrameRequest = Message<"livekit.proto.CaptureVideoFrameRequest"> & {
  /**
   * @generated from field: required uint64 source_handle = 1;
   */
  sourceHandle: bigint;

  /**
   * @generated from field: required livekit.proto.VideoBufferInfo buffer = 2;
   */
  buffer?: VideoBufferInfo;

  /**
   * In microseconds
   *
   * @generated from field: required int64 timestamp_us = 3;
   */
  timestampUs: bigint;

  /**
   * @generated from field: required livekit.proto.VideoRotation rotation = 4;
   */
  rotation: VideoRotation;
};

/**
 * Describes the message livekit.proto.CaptureVideoFrameRequest.
 * Use `create(CaptureVideoFrameRequestSchema)` to create a new message.
 */
export const CaptureVideoFrameRequestSchema: GenMessage<CaptureVideoFrameRequest> = /*@__PURE__*/
  messageDesc(file_video_frame, 6);

/**
 * @generated from message livekit.proto.CaptureVideoFrameResponse
 */
export type CaptureVideoFrameResponse = Message<"livekit.proto.CaptureVideoFrameResponse"> & {
};

/**
 * Describes the message livekit.proto.CaptureVideoFrameResponse.
 * Use `create(CaptureVideoFrameResponseSchema)` to create a new message.
 */
export const CaptureVideoFrameResponseSchema: GenMessage<CaptureVideoFrameResponse> = /*@__PURE__*/
  messageDesc(file_video_frame, 7);

/**
 * @generated from message livekit.proto.VideoConvertRequest
 */
export type VideoConvertRequest = Message<"livekit.proto.VideoConvertRequest"> & {
  /**
   * @generated from field: optional bool flip_y = 1;
   */
  flipY: boolean;

  /**
   * @generated from field: required livekit.proto.VideoBufferInfo buffer = 2;
   */
  buffer?: VideoBufferInfo;

  /**
   * @generated from field: required livekit.proto.VideoBufferType dst_type = 3;
   */
  dstType: VideoBufferType;
};

/**
 * Describes the message livekit.proto.VideoConvertRequest.
 * Use `create(VideoConvertRequestSchema)` to create a new message.
 */
export const VideoConvertRequestSchema: GenMessage<VideoConvertRequest> = /*@__PURE__*/
  messageDesc(file_video_frame, 8);

/**
 * @generated from message livekit.proto.VideoConvertResponse
 */
export type VideoConvertResponse = Message<"livekit.proto.VideoConvertResponse"> & {
  /**
   * @generated from oneof livekit.proto.VideoConvertResponse.message
   */
  message: {
    /**
     * @generated from field: string error = 1;
     */
    value: string;
    case: "error";
  } | {
    /**
     * @generated from field: livekit.proto.OwnedVideoBuffer buffer = 2;
     */
    value: OwnedVideoBuffer;
    case: "buffer";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message livekit.proto.VideoConvertResponse.
 * Use `create(VideoConvertResponseSchema)` to create a new message.
 */
export const VideoConvertResponseSchema: GenMessage<VideoConvertResponse> = /*@__PURE__*/
  messageDesc(file_video_frame, 9);

/**
 * @generated from message livekit.proto.VideoResolution
 */
export type VideoResolution = Message<"livekit.proto.VideoResolution"> & {
  /**
   * @generated from field: required uint32 width = 1;
   */
  width: number;

  /**
   * @generated from field: required uint32 height = 2;
   */
  height: number;

  /**
   * @generated from field: required double frame_rate = 3;
   */
  frameRate: number;
};

/**
 * Describes the message livekit.proto.VideoResolution.
 * Use `create(VideoResolutionSchema)` to create a new message.
 */
export const VideoResolutionSchema: GenMessage<VideoResolution> = /*@__PURE__*/
  messageDesc(file_video_frame, 10);

/**
 * @generated from message livekit.proto.VideoBufferInfo
 */
export type VideoBufferInfo = Message<"livekit.proto.VideoBufferInfo"> & {
  /**
   * @generated from field: required livekit.proto.VideoBufferType type = 1;
   */
  type: VideoBufferType;

  /**
   * @generated from field: required uint32 width = 2;
   */
  width: number;

  /**
   * @generated from field: required uint32 height = 3;
   */
  height: number;

  /**
   * @generated from field: required uint64 data_ptr = 4;
   */
  dataPtr: bigint;

  /**
   * only for packed formats
   *
   * @generated from field: required uint32 stride = 6;
   */
  stride: number;

  /**
   * @generated from field: repeated livekit.proto.VideoBufferInfo.ComponentInfo components = 7;
   */
  components: VideoBufferInfo_ComponentInfo[];
};

/**
 * Describes the message livekit.proto.VideoBufferInfo.
 * Use `create(VideoBufferInfoSchema)` to create a new message.
 */
export const VideoBufferInfoSchema: GenMessage<VideoBufferInfo> = /*@__PURE__*/
  messageDesc(file_video_frame, 11);

/**
 * @generated from message livekit.proto.VideoBufferInfo.ComponentInfo
 */
export type VideoBufferInfo_ComponentInfo = Message<"livekit.proto.VideoBufferInfo.ComponentInfo"> & {
  /**
   * @generated from field: required uint64 data_ptr = 1;
   */
  dataPtr: bigint;

  /**
   * @generated from field: required uint32 stride = 2;
   */
  stride: number;

  /**
   * @generated from field: required uint32 size = 3;
   */
  size: number;
};

/**
 * Describes the message livekit.proto.VideoBufferInfo.ComponentInfo.
 * Use `create(VideoBufferInfo_ComponentInfoSchema)` to create a new message.
 */
export const VideoBufferInfo_ComponentInfoSchema: GenMessage<VideoBufferInfo_ComponentInfo> = /*@__PURE__*/
  messageDesc(file_video_frame, 11, 0);

/**
 * @generated from message livekit.proto.OwnedVideoBuffer
 */
export type OwnedVideoBuffer = Message<"livekit.proto.OwnedVideoBuffer"> & {
  /**
   * @generated from field: required livekit.proto.FfiOwnedHandle handle = 1;
   */
  handle?: FfiOwnedHandle;

  /**
   * @generated from field: required livekit.proto.VideoBufferInfo info = 2;
   */
  info?: VideoBufferInfo;
};

/**
 * Describes the message livekit.proto.OwnedVideoBuffer.
 * Use `create(OwnedVideoBufferSchema)` to create a new message.
 */
export const OwnedVideoBufferSchema: GenMessage<OwnedVideoBuffer> = /*@__PURE__*/
  messageDesc(file_video_frame, 12);

/**
 * @generated from message livekit.proto.VideoStreamInfo
 */
export type VideoStreamInfo = Message<"livekit.proto.VideoStreamInfo"> & {
  /**
   * @generated from field: required livekit.proto.VideoStreamType type = 1;
   */
  type: VideoStreamType;
};

/**
 * Describes the message livekit.proto.VideoStreamInfo.
 * Use `create(VideoStreamInfoSchema)` to create a new message.
 */
export const VideoStreamInfoSchema: GenMessage<VideoStreamInfo> = /*@__PURE__*/
  messageDesc(file_video_frame, 13);

/**
 * @generated from message livekit.proto.OwnedVideoStream
 */
export type OwnedVideoStream = Message<"livekit.proto.OwnedVideoStream"> & {
  /**
   * @generated from field: required livekit.proto.FfiOwnedHandle handle = 1;
   */
  handle?: FfiOwnedHandle;

  /**
   * @generated from field: required livekit.proto.VideoStreamInfo info = 2;
   */
  info?: VideoStreamInfo;
};

/**
 * Describes the message livekit.proto.OwnedVideoStream.
 * Use `create(OwnedVideoStreamSchema)` to create a new message.
 */
export const OwnedVideoStreamSchema: GenMessage<OwnedVideoStream> = /*@__PURE__*/
  messageDesc(file_video_frame, 14);

/**
 * @generated from message livekit.proto.VideoStreamEvent
 */
export type VideoStreamEvent = Message<"livekit.proto.VideoStreamEvent"> & {
  /**
   * @generated from field: required uint64 stream_handle = 1;
   */
  streamHandle: bigint;

  /**
   * @generated from oneof livekit.proto.VideoStreamEvent.message
   */
  message: {
    /**
     * @generated from field: livekit.proto.VideoFrameReceived frame_received = 2;
     */
    value: VideoFrameReceived;
    case: "frameReceived";
  } | {
    /**
     * @generated from field: livekit.proto.VideoStreamEOS eos = 3;
     */
    value: VideoStreamEOS;
    case: "eos";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message livekit.proto.VideoStreamEvent.
 * Use `create(VideoStreamEventSchema)` to create a new message.
 */
export const VideoStreamEventSchema: GenMessage<VideoStreamEvent> = /*@__PURE__*/
  messageDesc(file_video_frame, 15);

/**
 * @generated from message livekit.proto.VideoFrameReceived
 */
export type VideoFrameReceived = Message<"livekit.proto.VideoFrameReceived"> & {
  /**
   * @generated from field: required livekit.proto.OwnedVideoBuffer buffer = 1;
   */
  buffer?: OwnedVideoBuffer;

  /**
   * In microseconds
   *
   * @generated from field: required int64 timestamp_us = 2;
   */
  timestampUs: bigint;

  /**
   * @generated from field: required livekit.proto.VideoRotation rotation = 3;
   */
  rotation: VideoRotation;
};

/**
 * Describes the message livekit.proto.VideoFrameReceived.
 * Use `create(VideoFrameReceivedSchema)` to create a new message.
 */
export const VideoFrameReceivedSchema: GenMessage<VideoFrameReceived> = /*@__PURE__*/
  messageDesc(file_video_frame, 16);

/**
 * @generated from message livekit.proto.VideoStreamEOS
 */
export type VideoStreamEOS = Message<"livekit.proto.VideoStreamEOS"> & {
};

/**
 * Describes the message livekit.proto.VideoStreamEOS.
 * Use `create(VideoStreamEOSSchema)` to create a new message.
 */
export const VideoStreamEOSSchema: GenMessage<VideoStreamEOS> = /*@__PURE__*/
  messageDesc(file_video_frame, 17);

/**
 * @generated from message livekit.proto.VideoSourceResolution
 */
export type VideoSourceResolution = Message<"livekit.proto.VideoSourceResolution"> & {
  /**
   * @generated from field: required uint32 width = 1;
   */
  width: number;

  /**
   * @generated from field: required uint32 height = 2;
   */
  height: number;
};

/**
 * Describes the message livekit.proto.VideoSourceResolution.
 * Use `create(VideoSourceResolutionSchema)` to create a new message.
 */
export const VideoSourceResolutionSchema: GenMessage<VideoSourceResolution> = /*@__PURE__*/
  messageDesc(file_video_frame, 18);

/**
 * @generated from message livekit.proto.VideoSourceInfo
 */
export type VideoSourceInfo = Message<"livekit.proto.VideoSourceInfo"> & {
  /**
   * @generated from field: required livekit.proto.VideoSourceType type = 1;
   */
  type: VideoSourceType;
};

/**
 * Describes the message livekit.proto.VideoSourceInfo.
 * Use `create(VideoSourceInfoSchema)` to create a new message.
 */
export const VideoSourceInfoSchema: GenMessage<VideoSourceInfo> = /*@__PURE__*/
  messageDesc(file_video_frame, 19);

/**
 * @generated from message livekit.proto.OwnedVideoSource
 */
export type OwnedVideoSource = Message<"livekit.proto.OwnedVideoSource"> & {
  /**
   * @generated from field: required livekit.proto.FfiOwnedHandle handle = 1;
   */
  handle?: FfiOwnedHandle;

  /**
   * @generated from field: required livekit.proto.VideoSourceInfo info = 2;
   */
  info?: VideoSourceInfo;
};

/**
 * Describes the message livekit.proto.OwnedVideoSource.
 * Use `create(OwnedVideoSourceSchema)` to create a new message.
 */
export const OwnedVideoSourceSchema: GenMessage<OwnedVideoSource> = /*@__PURE__*/
  messageDesc(file_video_frame, 20);

/**
 * @generated from enum livekit.proto.VideoCodec
 */
export enum VideoCodec {
  /**
   * @generated from enum value: VP8 = 0;
   */
  VP8 = 0,

  /**
   * @generated from enum value: H264 = 1;
   */
  H264 = 1,

  /**
   * @generated from enum value: AV1 = 2;
   */
  AV1 = 2,

  /**
   * @generated from enum value: VP9 = 3;
   */
  VP9 = 3,
}

/**
 * Describes the enum livekit.proto.VideoCodec.
 */
export const VideoCodecSchema: GenEnum<VideoCodec> = /*@__PURE__*/
  enumDesc(file_video_frame, 0);

/**
 * @generated from enum livekit.proto.VideoRotation
 */
export enum VideoRotation {
  /**
   * @generated from enum value: VIDEO_ROTATION_0 = 0;
   */
  VIDEO_ROTATION_0 = 0,

  /**
   * @generated from enum value: VIDEO_ROTATION_90 = 1;
   */
  VIDEO_ROTATION_90 = 1,

  /**
   * @generated from enum value: VIDEO_ROTATION_180 = 2;
   */
  VIDEO_ROTATION_180 = 2,

  /**
   * @generated from enum value: VIDEO_ROTATION_270 = 3;
   */
  VIDEO_ROTATION_270 = 3,
}

/**
 * Describes the enum livekit.proto.VideoRotation.
 */
export const VideoRotationSchema: GenEnum<VideoRotation> = /*@__PURE__*/
  enumDesc(file_video_frame, 1);

/**
 * @generated from enum livekit.proto.VideoBufferType
 */
export enum VideoBufferType {
  /**
   * @generated from enum value: RGBA = 0;
   */
  RGBA = 0,

  /**
   * @generated from enum value: ABGR = 1;
   */
  ABGR = 1,

  /**
   * @generated from enum value: ARGB = 2;
   */
  ARGB = 2,

  /**
   * @generated from enum value: BGRA = 3;
   */
  BGRA = 3,

  /**
   * @generated from enum value: RGB24 = 4;
   */
  RGB24 = 4,

  /**
   * @generated from enum value: I420 = 5;
   */
  I420 = 5,

  /**
   * @generated from enum value: I420A = 6;
   */
  I420A = 6,

  /**
   * @generated from enum value: I422 = 7;
   */
  I422 = 7,

  /**
   * @generated from enum value: I444 = 8;
   */
  I444 = 8,

  /**
   * @generated from enum value: I010 = 9;
   */
  I010 = 9,

  /**
   * @generated from enum value: NV12 = 10;
   */
  NV12 = 10,
}

/**
 * Describes the enum livekit.proto.VideoBufferType.
 */
export const VideoBufferTypeSchema: GenEnum<VideoBufferType> = /*@__PURE__*/
  enumDesc(file_video_frame, 2);

/**
 * @generated from enum livekit.proto.VideoStreamType
 */
export enum VideoStreamType {
  /**
   * @generated from enum value: VIDEO_STREAM_NATIVE = 0;
   */
  VIDEO_STREAM_NATIVE = 0,

  /**
   * @generated from enum value: VIDEO_STREAM_WEBGL = 1;
   */
  VIDEO_STREAM_WEBGL = 1,

  /**
   * @generated from enum value: VIDEO_STREAM_HTML = 2;
   */
  VIDEO_STREAM_HTML = 2,
}

/**
 * Describes the enum livekit.proto.VideoStreamType.
 */
export const VideoStreamTypeSchema: GenEnum<VideoStreamType> = /*@__PURE__*/
  enumDesc(file_video_frame, 3);

/**
 * @generated from enum livekit.proto.VideoSourceType
 */
export enum VideoSourceType {
  /**
   * @generated from enum value: VIDEO_SOURCE_NATIVE = 0;
   */
  VIDEO_SOURCE_NATIVE = 0,
}

/**
 * Describes the enum livekit.proto.VideoSourceType.
 */
export const VideoSourceTypeSchema: GenEnum<VideoSourceType> = /*@__PURE__*/
  enumDesc(file_video_frame, 4);

